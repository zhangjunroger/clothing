<!DOCTYPE html>
<html lang="zh-CN">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>登录-被装管理系统</title>
    <!-- 引入 Bootstrap 样式 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
</head>

<style>
    /* 模态窗口基础样式 */
    .modal {
        display: none;
        /* 默认隐藏 */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
        width: 50%;
        max-width: 600px;
        /* 增大最大宽度，让大屏幕显示更多内容 */
        max-height: 90vh;
        overflow-y: auto;
        background-color: rgba(0, 0, 0, 0.5);
        /* 半透明背景 */
        justify-content: center;
        align-items: center;
    }

    /* 模态内容样式 */
    .modal-content {
        width: 90%;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        margin: auto;
        /* 居中 */
        position: relative;
    }

    .modal-content input {
        width: 50%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-sizing: border-box;
    }

    /* 其余样式保持不变 */
    .close-modal {
        color: #aaa !important;
        float: right !important;
        font-size: 28px !important;
        font-weight: bold !important;
        cursor: pointer !important;
    }

    .close-modal:hover {
        color: #000 !important;
    }

    .form-group {
        margin-bottom: 15px !important;
    }

    .form-group label {
        display: block !important;
        margin-bottom: 5px !important;
    }

    .form-group input {
        width: 100% !important;
        padding: 8px !important;
        border: 1px solid #ddd !important;
        border-radius: 4px !important;
        box-sizing: border-box !important;
        /* 确保padding不会增加宽度 */
    }

    .form-buttons {
        display: flex !important;
        justify-content: flex-end !important;
        gap: 10px !important;
        margin-top: 15px !important;
    }

    .password-error {
        color: #e74c3c !important;
        font-size: 14px !important;
        margin-top: 10px !important;
        min-height: 20px !important;
    }

    /* 按钮样式 */
    .btn-edit-password {
        background-color: #3498db !important;
        color: white !important;
        border: none !important;
        padding: 5px 10px !important;
        border-radius: 3px !important;
        cursor: pointer !important;
        margin-right: 5px !important;
    }

    .btn-edit-password:hover {
        background-color: #2980b9 !important;
    }

    #cancelPasswordBtn {
        background-color: #95a5a6 !important;
        color: white !important;
        border: none !important;
        padding: 8px 15px !important;
        border-radius: 3px !important;
        cursor: pointer !important;
    }

    #savePasswordBtn {
        background-color: #2ecc71 !important;
        color: white !important;
        border: none !important;
        padding: 8px 15px !important;
        border-radius: 3px !important;
        cursor: pointer !important;
    }

    .btn-change {
        background-color: #f49236;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-change:hover {
        background-color: #f49236;
    }

    .close-modal {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

    .error-message {
        color: #e74c3c;
        margin-top: 10px;
        font-size: 14px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
    }

    .form-group input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .form-links {
        display: flex;
        justify-content: center;
        text-align: center;
        margin-top: 10px;
        font-size: 18px
    }

    #forgotPasswordLink {
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s ease;
    }

    #forgotPasswordLink:hover {
        color: #0056b3;
        text-decoration: underline;
    }
</style>

<body>

    <div class="bg-light d-flex justify-content-center align-items-center vh-100">
        <!-- Bootstrap 布局容器 -->
        <div class="container" style="max-width: 600px;">
            <!-- Logo -->
            <div class="text-center mb-4">
                <img src="/images/banner_2023.jpg" alt="公司 Logo" class="img-fluid rounded"
                    style="width: auto; max-height: 150px;">
            </div>
            <!-- 登录表单 -->
            <div class="card shadow">
                <div class="card-body">
                    <h1 class="text-center mb-4">用户登录</h1>
                    <% if (typeof error !=='undefined' ) { %>
                        <div class="alert alert-danger">
                            <%= error %>
                        </div>
                        <% } %>
                            <form action="/login" method="POST">
                                <div class="mb-3">
                                    <label for="username" class="form-label">用户名：</label>
                                    <input type="text" id="username" name="username" placeholder="身份证号"
                                        class="form-control" required>
                                </div>
                                <div class="mb-3">
                                    <label for="password" class="form-label">密码：</label>
                                    <input type="password" id="password" name="password" class="form-control" required>
                                </div>
                                <div class="d-grid mb-3">
                                    <button type="submit" class="btn btn-primary">登录</button>
                                </div>
                            </form>
                            <!-- <div class="form-links" class="text-center">
                                <a href="#" id="forgotPasswordLink">忘记密码？</a>
                            </div> -->
                            <p class="text-center">还没有账号？<a href="/register">立即注册</a></p>
                </div>
            </div>
        </div>
    </div>

    <!-- 忘记密码模态框 -->
    <div id="forgotPasswordModal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>重置密码</h2>

            <!-- 步骤1：输入邮箱 -->
            <div id="emailVerificationStep">
                <p>请输入您注册时使用的邮箱</p>
                <form id="emailVerificationForm">
                    <div class="form-group">
                        <label for="resetEmail">邮箱地址</label>
                        <input type="email" id="resetEmail" required>
                    </div>
                    <div id="emailError" class="error-message"></div>
                    <button type="submit" id="sendVerificationCodeBtn">发送修改密码链接</button>
                </form>
            </div>

            <!-- 步骤2：输入验证码 -->
            <div id="verificationCodeStep" style="display: none;">
                <p>修改密码的链接已发送到 <span id="maskedEmail"></span>！</p>
                <form id="verificationCodeForm">
                    <button type="button" id="resendCodeBtn">重新发送</button>
                </form>
            </div>
        </div>
    </div>

    <!-- 引入 Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



    <script>

        document.addEventListener('DOMContentLoaded', () => {
            const forgotPasswordModal = document.getElementById('forgotPasswordModal');
            const forgotPasswordLink = document.getElementById('forgotPasswordLink');
            const closeModalBtn = document.querySelector('.close-modal');

            // 打开忘记密码模态框  
            forgotPasswordLink.addEventListener('click', (e) => {
                e.preventDefault();
                forgotPasswordModal.style.display = 'block';
                resetToEmailVerificationStep();
            });

            // 关闭模态框  
            closeModalBtn.addEventListener('click', () => {
                forgotPasswordModal.style.display = 'none';
            });

            // 发送验证码  
            document.getElementById('emailVerificationForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const email = document.getElementById('resetEmail').value;
                const emailError = document.getElementById('emailError');

                // 清除之前的错误  
                emailError.textContent = '';

                try {
                    const response = await fetch('/api/send-verification-code', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        // 隐藏邮箱输入步骤，显示验证码输入步骤  
                        document.getElementById('emailVerificationStep').style.display = 'none';
                        document.getElementById('verificationCodeStep').style.display = 'block';
                        document.getElementById('maskedEmail').textContent = data.maskedEmail;
                    } else {
                        emailError.textContent = data.error || '发送验证码失败';
                    }
                } catch (error) {
                    console.error('发送验证码错误:', error);
                    emailError.textContent = '网络错误，请稍后重试';
                }
            });

            // 验证验证码  
            document.getElementById('verificationCodeForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const email = document.getElementById('resetEmail').value;
                const verificationCode = document.getElementById('verificationCode').value;
                const codeError = document.getElementById('codeError');

                // 清除之前的错误  
                codeError.textContent = '';

                try {
                    const response = await fetch('/api/verify-code', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email, verificationCode })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        // 隐藏验证码输入步骤，显示重置密码步骤  
                        document.getElementById('verificationCodeStep').style.display = 'none';
                        document.getElementById('resetPasswordStep').style.display = 'block';
                    } else {
                        codeError.textContent = data.error || '验证码错误';
                    }
                } catch (error) {
                    console.error('验证码验证错误:', error);
                    codeError.textContent = '网络错误，请稍后重试';
                }
            });

            // 重置密码  
            document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const email = document.getElementById('resetEmail').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;
                const passwordError = document.getElementById('passwordError');

                // 清除之前的错误  
                passwordError.textContent = '';

                // 密码验证  
                if (newPassword.length < 6) {
                    passwordError.textContent = '密码长度必须至少为6个字符';
                    return;
                }

                if (newPassword !== confirmPassword) {
                    passwordError.textContent = '两次输入的密码不一致';
                    return;
                }

                try {
                    const response = await fetch('/api/reset-password', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email, newPassword })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        alert('密码重置成功，请使用新密码登录');
                        forgotPasswordModal.style.display = 'none';
                    } else {
                        passwordError.textContent = data.error || '密码重置失败';
                    }
                } catch (error) {
                    console.error('重置密码错误:', error);
                    passwordError.textContent = '网络错误，请稍后重试';
                }
            });

            // 重新发送验证码  
            document.getElementById('resendCodeBtn').addEventListener('click', async () => {
                const email = document.getElementById('resetEmail').value;
                const codeError = document.getElementById('codeError');

                // 清除之前的错误  
                codeError.textContent = '';

                try {
                    const response = await fetch('/api/resend-verification-code', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        alert('验证码已重新发送');
                    } else {
                        codeError.textContent = data.error || '重新发送验证码失败';
                    }
                } catch (error) {
                    console.error('重新发送验证码错误:', error);
                    codeError.textContent = '网络错误，请稍后重试';
                }
            });

            // 重置到邮箱验证步骤的函数  
            function resetToEmailVerificationStep() {
                document.getElementById('emailVerificationStep').style.display = 'block';
                document.getElementById('verificationCodeStep').style.display = 'none';
                document.getElementById('resetPasswordStep').style.display = 'none';
                document.getElementById('resetEmail').value = '';
                document.getElementById('emailError').textContent = '';
            }
        });


    </script>
</body>

</html>